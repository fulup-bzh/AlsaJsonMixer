"use strict";function scarletteCapture(){function a(a,b,c,d){a.matrixSourcesPool=[],a.matrixRoutesPool=[],a.ProcessRouteSource=function(a){var b={name:a.name,actif:a.actif,numid:a.numid,value:a.value,line:a};return b},a.ProcessVolume=function(a){var b="Vol-"+a.name;if(0==a.volumes.length)var c={name:b,numid:a.route.numid,title:a.route.name};else for(var c={name:b,volumes:[]},d=0;d<a.volumes.length;d+=2){var e=a.volumes[d],f=a.volumes[d+1],g={leftLine:{id:e.numid,actif:e.actif,value:e.value[0],notLess:e.ctrl.min,notMore:e.ctrl.max,byStep:e.ctrl.step,title:e.name},rightLine:{id:f.numid,actif:f.actif,value:f.value[0],notLess:f.ctrl.min,notMore:f.ctrl.max,byStep:f.ctrl.step,title:f.name}};c.volumes.push(g)}return c},d.$formatters.unshift(function(b){if(b){for(var c=[],d=[],e=[],f=b.sources[1].ctrl.enums,g=0;g<f.length;g++)a.matrixSourcesPool.push({id:g,name:f[g],used:!1,options:[]});for(var g=0;g<b.sources.length;g+=2){var h=b.sources[g],i=b.sources[g+1],j="["+(g+1)+"/"+(g+2)+"]",k={uid:h.numid+"-"+i.numid,title:"Stereo Capture Line "+j,label:"Line "+j,name:"Capt "+j,matrixLinesPool:a.matrixSourcesPool,leftLine:a.ProcessRouteSource(h),rightLine:a.ProcessRouteSource(i)};c.push(k)}for(var l=b.routes[1].ctrl.enums,g=0;g<l.length;g++)a.matrixRoutesPool.push({id:g,name:l[g],used:!1,options:[]});for(var g=0;g<b.routes.length;g+=2){var h=b.routes[g],i=b.routes[g+1],j="["+(g+1)+"/"+(g+2)+"]",k={uid:h.numid+"-"+i.numid,title:"Stereo Output Route"+j,label:"Route "+j,name:"Out "+j,matrixLinesPool:a.matrixRoutesPool,leftLine:a.ProcessRouteSource(h),rightLine:a.ProcessRouteSource(i)};d.push(k)}for(var m=0;m<b.volumes.length;m+=2){var n=b.volumes[m],o=b.volumes[m+1],p={name:"Vol-"+n.name+" / "+o.name,leftLine:[],rightLine:[]};p.leftLine=a.ProcessVolume(n),p.rightLine=a.ProcessVolume(o),e.push(p)}a.matrixSources=c,a.matrixRoutes=d,a.matrixVolumes=e}}),a.updatePool=function(a,b,c){a[b].used=c;for(var d=0;d<a[b].options.length;d++)a[b].options[d].disabled=c},a.takeLinePool=function(b,c){0==c||b[c].used||a.updatePool(b,c,!0)},a.freeLinePool=function(b,c){0!=c&&a.updatePool(b,c,!1)},a.matrixSourcesPoolCB={take:function(b){a.takeLinePool(a.matrixSourcesPool,b)},free:function(b){a.freeLinePool(a.matrixSourcesPool,b)}},a.matrixRoutesPoolCB={take:function(b){a.takeLinePool(a.matrixRoutesPool,b)},free:function(b){a.freeLinePool(a.matrixRoutesPool,b)}}}return{templateUrl:"partials/scarlett-capture.html",require:"ngModel",scope:{callback:"="},restrict:"E",link:a}}function ScarlettController(a,b,c){var d=this;d.getControls=function(a){var b={request:"get-ctrls",sndcard:a},e=c.get("/alsa-json",{params:b});e.success(function(a){d.sndcard=a.sndcard;for(var b=[],c=[],e=[],f=0;f<a.controls.length;f++){var g=a.controls[f],h=g.name.toLowerCase().split(" ");if("input"===h[0]&&"capture"===h[3]&&b.push(g),"matrix"===h[0]&&"playback"==h[3]&&e.push(g),"matrix"===h[0]&&"mix"===h[2]&&"volume"==h[5]){var i=h[3];c[i]||(c[i]={name:i.toUpperCase(),route:"",volumes:[]}),c[i].volumes.push(g)}}var j=[];c&&Object.keys(c).forEach(function(a){j.push(c[a])},c),d.alsamixer={sources:b,routes:e,volumes:j}}),e.error(function(){alert("Fail to get Card Controls from AlsaJsonGateway")})},d.callback=function(b,c){a.log("Scarlett callback action=",b," value=",c)},d.init=function(){d.getControls(b.search().card)},d.init()}ngapp.addDirective("scarlettCapture",["$log",scarletteCapture]),ngapp.addController("ScarlettMixerController",["$log","$location","$http",ScarlettController]);